name: Continuous Integration
on: 
  push:
    paths-ignore: 'README.md'
  pull_request:
    types: [opened, reopened]
    paths-ignore: 'README.md'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: docker build --target test --tag todo-app:test .
    - run: docker run todo-app:test

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    - run: docker build --target dependency-check --tag todo-app:dependency-check .
    - run: docker run todo-app:dependency-check
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker build --target production --tag katielht/todo-app:prod .
      - run: docker push katielht/todo-app:prod

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID}}
      TF_VAR_prefix: "katlin-tf"
      TF_VAR_OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      TF_VAR_OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      TF_VAR_LOGGLY_TOKEN: ${{ secrets.LOGGLY_TOKEN }}
    steps: 
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
    - run: |
          cd terraform 
          terraform init
          terraform apply -auto-approve
          curl -dH -X POST "$(terraform output -raw webhook_url)"




